let express,formidable,createPost,uploadImage,postByUser,userPost,updatePost,newsFeed,deletePost,totalPost,unlikePost,likePost,addComment,removeComment,posts,getPost,requireSignIn,canEditDeletePost,isAdmin;_94b‍.w("express",[["default",["express"],function(v){express=v}]]);_94b‍.w("express-formidable",[["default",["formidable"],function(v){formidable=v}]]);_94b‍.w("../controller/post",[["createPost",["createPost"],function(v){createPost=v}],["uploadImage",["uploadImage"],function(v){uploadImage=v}],["postByUser",["postByUser"],function(v){postByUser=v}],["userPost",["userPost"],function(v){userPost=v}],["updatePost",["updatePost"],function(v){updatePost=v}],["newsFeed",["newsFeed"],function(v){newsFeed=v}],["deletePost",["deletePost"],function(v){deletePost=v}],["totalPost",["totalPost"],function(v){totalPost=v}],["unlikePost",["unlikePost"],function(v){unlikePost=v}],["likePost",["likePost"],function(v){likePost=v}],["addComment",["addComment"],function(v){addComment=v}],["removeComment",["removeComment"],function(v){removeComment=v}],["posts",["posts"],function(v){posts=v}],["getPost",["getPost"],function(v){getPost=v}]]);_94b‍.w("../middlewares",[["requireSignIn",["requireSignIn"],function(v){requireSignIn=v}],["canEditDeletePost",["canEditDeletePost"],function(v){canEditDeletePost=v}],["isAdmin",["isAdmin"],function(v){isAdmin=v}]]);

const router = express.Router();

















// middleware


// router
// post related request taken up here
router.post("/create-post", requireSignIn, createPost);

// For handling form data formidable is used
router.post(
  "/upload-image",
  requireSignIn,
  formidable({ maxFileSize: 10 * 1024 * 1024 }),
  uploadImage
);
router.delete(
  "/delete-post/:_id",
  requireSignIn,
  canEditDeletePost,
  deletePost
);
router.get("/user-post/:_id", requireSignIn, userPost);
router.put("/update-post/:_id", requireSignIn, canEditDeletePost, updatePost);
router.get("/user-post", requireSignIn, postByUser);
router.get("/news-feed/:page", requireSignIn, newsFeed);
router.put("/like-post", requireSignIn, likePost);
router.put("/add-comment", requireSignIn, addComment);
router.put("/remove-comment", requireSignIn, removeComment);
router.put("/unlike-post", requireSignIn, unlikePost);
router.get("/total-post", totalPost);
router.get("user-post/:_id", userPost);
router.get("/posts", posts);
router.get("/post/:_id", getPost);

// admin access
router.delete(
  "/admin/delete-post/:_id",
  requireSignIn,
  isAdmin,
  deletePost
);
module.exports = router;
