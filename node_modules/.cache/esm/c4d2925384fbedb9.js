let mongoose;_84f‍.x([["default",()=>_84f‍.o]]);_84f‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);
const { ObjectId } = mongoose.Schema;

const postSchema = new mongoose.Schema(
  {
    content: {
      type: {},
      required: true,
    },
    postedBy: {
      type: ObjectId,
      ref: "User",
    },
    image: {
      url: String,
      public_id: String,
    },
    likes: [{ type: ObjectId, ref: "User" }],
    comments: [
      {
        text: String,
        created: { type: Date, default: Date.now },
        postedBy: {
          type: ObjectId,
          ref: "User",
        },
      },
    ],
  },
  { timestamps: true }
);
_84f‍.d(mongoose.model("Post", postSchema));

// if we want to set the width height and scale the image the image then we can use w_70,h_50,c_scale in the url
// after upload this would set the required size to be should in the client side
